pipeline {
    agent {
        label 'docker'
    }

    environment {
        DOCKERHUB_CREDENTIALS = credentials('dockeruser')
        registry = "ksksrikanth/frontend-lms"
        registryCredential = 'dockerhub'
    }

    stages {
stage('Build Approval') {
      steps {
        input(
          id: 'userInput',
          message: 'Do you want to proceed with the build?',
          ok: 'Proceed'
        )
      }
    }
stage('pipeline status') {
            steps {
                script {
                    slackSend channel: 'jenkins-notification',
                            color: '#1E1EC9',
                            message: 'lms-frontend Pipeline has been Started',
                            tokenCredentialId: 'yVxUzFTHFoPAq2ARuKYXFCBk'
                }
            }
        }
        stage('Building the docker image') {
            steps {
                sh 'cd webapp && docker build -t ksksrikanth/frontend-lms .'
            }
        }

        stage('Logging into dockerhub account') {
            steps {
                sh 'echo $DOCKERHUB_CREDENTIALS_PSW | docker login -u $DOCKERHUB_CREDENTIALS_USR --password-stdin'
            }
        }

        stage('Pushing the docker image into dockerhub') {
            steps {
                sh 'docker push ksksrikanth/frontend-lms'
            }
        }

        stage('Remove old docker images') {
            steps {
                sh 'docker rmi -f ksksrikanth/frontend-lms'
            }
        }

        stage('Running the docker container') {
            steps {
                sh 'docker container rm --force fe'
                sh 'docker run -dt -p 80:80 --name fe ksksrikanth/frontend-lms'
            }
        }
    }
post {
    success {
        script {mail bcc: '', body: '''Building lms application frontend job got success. Check your browser with your IP or Domain address to view the LMS-Application.
            Thank you''', cc: '', from: '', replyTo: '', subject: 'Build Successful !! lms_frontend', to: 'srikanthkurra111@gmail.com'
}
}
}
}
